---
import type { Post } from "@schemas"
import Giscus from "@giscus/svelte"
import { Tags } from "@components"
import { Card, Subtitle, Title } from "@components/ui"
import { BaseLayout } from "@layouts"
import { formatDate, renderMarkdown } from "@utils"
type Props = {
  post: Post
}
const { post } = Astro.props
const { content, title, description, published, tags, type, updated } = post
const markdown = await renderMarkdown(content)
const code = !!markdown.match("<code")
---
<BaseLayout title={title} description={description} code={code}>
  <Card>
    <article>
      <Title>{title}</Title>
      <Subtitle>
        {updated && <span>Updated: {formatDate(updated)}</span>}
        <span>Published: {formatDate(published)}</span>
      </Subtitle>
      <hr>
      {type === "photo" ? <div id="markdown"><div set:html={markdown} /></div> : <div id="markdown" set:html={markdown} />}
      <hr>
      <Tags tags={tags} />
    </article>
  </Card>
  <Card>
    <Giscus 
      id="comments"
      repo="cptchloroplast/blog"
      repoId="MDEwOlJlcG9zaXRvcnkyNTM2MzYxNDk="
      category="Announcements"
      categoryId="DIC_kwDODx4uNc4COmZv"
      mapping="og:title"
      term={null}
      reactionsEnabled="0"
      emitMetadata="0"
      inputPosition="bottom"
      theme="light"
      lang="en"
      client:load
    />
  </Card>
</BaseLayout>

<style is:global>
  #markdown {
    line-height: 1.5;
  }
  
  #markdown :first-child{
    margin-top: 0;
  }

  #markdown :last-child {
    margin-bottom: 0;
  }

  #markdown pre {
    padding: 8px;
  }
</style>